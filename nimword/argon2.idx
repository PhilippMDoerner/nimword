nimTitle	argon2	nimword/argon2.html	module src/nimword/argon2		0
nim	encodeHash	nimword/argon2.html#encodeHash,Hash,seq[byte],int,PasswordHashingAlgorithm,int	proc encodeHash(hash: Hash; salt: seq[byte]; iterations: int;\n           algorithm: PasswordHashingAlgorithm; memoryLimitKibiBytes: int): string		11
nim	hashPassword	nimword/argon2.html#hashPassword,Password,seq[byte],int,int,PasswordHashingAlgorithm,int	proc hashPassword(password: Password; salt: seq[byte];\n             iterations: int = crypto_pwhash_opslimit_moderate().int;\n             hashLength: int = 32;\n             algorithm: PasswordHashingAlgorithm = phaDefault;\n    memoryLimitKibiBytes: int = int(crypto_pwhash_memlimit_moderate()) / 1024.int): Hash		44
nim	hashEncodePassword	nimword/argon2.html#hashEncodePassword,Password,int,PasswordHashingAlgorithm,int	proc hashEncodePassword(password: Password;\n                   iterations: int = crypto_pwhash_opslimit_moderate().int;\n                   algorithm: PasswordHashingAlgorithm = phaDefault;\n    memoryLimitKibiBytes: int = int(crypto_pwhash_memlimit_moderate()) / 1024.int): string		90
nim	isValidPassword	nimword/argon2.html#isValidPassword,Password,string	proc isValidPassword(password: Password; encodedHash: string): bool		117
